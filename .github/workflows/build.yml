name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore WindowsCleanerNew/WindowsCleanerNew.csproj
      
    - name: Build
      run: dotnet build WindowsCleanerNew/WindowsCleanerNew.csproj --no-restore --configuration Release
      
    - name: Test
      run: dotnet test WindowsCleanerNew/WindowsCleanerNew.csproj --no-build --configuration Release --verbosity normal
      continue-on-error: true
      
    - name: Publish Windows x64
      run: dotnet publish WindowsCleanerNew/WindowsCleanerNew.csproj -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -o publish/win-x64
      
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-cleaner-win-x64
        path: publish/win-x64/
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Windows System Cleaner Pro ${{ github.ref }}
        body: |
          ## Windows System Cleaner Pro Release
          
          ### Changes
          - Automated build from GitHub Actions
          - Single-file executable for easy distribution
          
          ### Download
          - Download `WindowsCleanerNew.exe` below
          - Run as administrator for full functionality
          
          ### System Requirements
          - Windows 10 (1809+) or Windows 11
          - .NET 8.0 Runtime (auto-installed)
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: publish/win-x64/WindowsCleanerNew.exe
        asset_name: WindowsCleanerNew.exe
        asset_content_type: application/octet-stream
